---
import { WandBClient, type WandBProject, type WandBRun } from '../../utils/wandb-client';
import { getServerEnv } from '../../config/env';

export interface Props {
  entity?: string;
  projects?: string[];
  limit?: number;
  showProjects?: boolean;
  showRecentRuns?: boolean;
  className?: string;
}

const {
  entity,
  projects = [],
  limit = 5,
  showProjects = true,
  showRecentRuns = true,
  className = ''
} = Astro.props;

let wandbProjects: WandBProject[] = [];
let recentRuns: WandBRun[] = [];
let error: string | null = null;
let isConfigured = false;
let wandbEntity: string | undefined;
let wandbApiKey: string | undefined;

// 改进的环境变量处理
try {
  const env = getServerEnv();
  wandbEntity = env.WANDB_ENTITY;
  wandbApiKey = env.WANDB_API_KEY;
  isConfigured = !!(wandbEntity && wandbApiKey);
  
  if (isConfigured && wandbEntity && wandbApiKey) {
    const wandbClient = new WandBClient({
      entity: wandbEntity,
      apiKey: wandbApiKey
    });
    const targetEntity = entity || wandbEntity;
    
    // 获取项目数据
    if (showProjects && targetEntity) {
      wandbProjects = await wandbClient.getProjects(targetEntity);
    
      // 如果指定了项目列表，则过滤
      if (projects.length > 0) {
        wandbProjects = wandbProjects.filter(p => projects.includes(p.name));
      }
      
      // 限制显示数量
      wandbProjects = wandbProjects.slice(0, limit);
    }
    
    // 获取最近的实验运行
    if (showRecentRuns && wandbProjects.length > 0) {
      const allRuns: WandBRun[] = [];
      
      for (const project of wandbProjects.slice(0, 3)) { // 只从前3个项目获取运行数据
        try {
          const runs = await wandbClient.getRuns(project.name, targetEntity, 10);
          allRuns.push(...runs);
        } catch (err) {
          console.warn(`Failed to fetch runs for project ${project.name}:`, err);
        }
      }
      
      // 按时间排序并限制数量
      recentRuns = allRuns
        .sort((a, b) => new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime())
        .slice(0, limit);
    }
  } else {
    error = 'WandB is not configured. Please set WANDB_ENTITY and WANDB_API_KEY in your environment.';
  }
} catch (err) {
  console.error('Failed to fetch WandB data:', err);
  
  // 更详细的错误信息
  if (err instanceof Error) {
    if (err.message.includes('Network error') || err.message.includes('Unable to connect')) {
      error = `网络连接失败: ${err.message}`;
    } else if (err.message.includes('authentication')) {
      error = `WandB 认证失败: ${err.message}`;
    } else if (err.message.includes('rate limit')) {
      error = `WandB API 限制: ${err.message}`;
    } else {
      error = `WandB 数据加载失败: ${err.message}`;
    }
  } else {
    error = 'WandB 数据加载失败，请检查网络连接和配置';
  }
}

// 计算总统计
const totalProjects = wandbProjects.length;
const totalRuns = wandbProjects.reduce((sum, p) => sum + p.run_count, 0);
const finishedRuns = recentRuns.filter(r => r.state === 'finished').length;

// 获取显示用的 entity
let displayEntity = entity || wandbEntity || 'wandb';
---

<div class={`wandb-stats ${className}`}>
  <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
    <div class="flex items-center justify-between mb-6">
      <h3 class="text-lg font-semibold text-gray-900 flex items-center">
        <svg class="w-5 h-5 mr-2 text-orange-500" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd"></path>
        </svg>
        WandB 实验统计
      </h3>
      {isConfigured && displayEntity && (
        <a 
          href={`https://wandb.ai/${displayEntity}`}
          target="_blank"
          rel="noopener noreferrer"
          class="text-sm text-blue-600 hover:text-blue-800 transition-colors"
        >
          查看完整数据 ↗
        </a>
      )}
    </div>

    {error ? (
      <div class="text-center py-8">
        <svg class="w-12 h-12 mx-auto mb-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
        </svg>
        <p class="text-gray-600 mb-4">{error}</p>
        {!isConfigured && (
          <div class="text-sm text-gray-500 space-y-2">
            <p>配置步骤：</p>
            <ol class="text-left inline-block space-y-1">
              <li>1. 访问 <a href="https://wandb.ai/settings" target="_blank" class="text-blue-600 hover:underline">WandB Settings</a> 获取 API Key</li>
              <li>2. 在 .env 文件中设置 WANDB_ENTITY 和 WANDB_API_KEY</li>
              <li>3. 重启开发服务器</li>
            </ol>
          </div>
        )}
      </div>
    ) : (
      <>
        <!-- 统计概览 -->
        <div class="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6">
          <div class="text-center p-4 bg-blue-50 rounded-lg">
            <div class="text-2xl font-bold text-blue-600">{totalProjects}</div>
            <div class="text-sm text-gray-600">项目</div>
          </div>
          <div class="text-center p-4 bg-green-50 rounded-lg">
            <div class="text-2xl font-bold text-green-600">{totalRuns}</div>
            <div class="text-sm text-gray-600">总实验</div>
          </div>
          <div class="text-center p-4 bg-purple-50 rounded-lg">
            <div class="text-2xl font-bold text-purple-600">{finishedRuns}</div>
            <div class="text-sm text-gray-600">已完成</div>
          </div>
          <div class="text-center p-4 bg-orange-50 rounded-lg">
            <div class="text-2xl font-bold text-orange-600">{recentRuns.filter(r => r.state === 'running').length}</div>
            <div class="text-sm text-gray-600">运行中</div>
          </div>
        </div>

        <div class="grid md:grid-cols-2 gap-6">
          <!-- 项目列表 -->
          {showProjects && wandbProjects.length > 0 && (
            <div>
              <h4 class="font-semibold text-gray-800 mb-3">活跃项目</h4>
              <div class="space-y-3">
                {wandbProjects.map((project) => (
                  <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                    <div class="flex-1">
                      <div class="font-medium text-gray-900">{project.name}</div>
                      {project.description && (
                        <div class="text-sm text-gray-600 truncate">{project.description}</div>
                      )}
                    </div>
                    <div class="text-right">
                      <div class="text-sm font-medium text-gray-900">{project.run_count}</div>
                      <div class="text-xs text-gray-500">runs</div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}

          <!-- 最近运行 -->
          {showRecentRuns && recentRuns.length > 0 && (
            <div>
              <h4 class="font-semibold text-gray-800 mb-3">最近实验</h4>
              <div class="space-y-3">
                {recentRuns.map((run) => (
                  <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                    <div class="flex-1 min-w-0">
                      <div class="font-medium text-gray-900 truncate">
                        {run.display_name || run.name}
                      </div>
                      <div class="text-sm text-gray-600">{run.project.name}</div>
                    </div>
                    <div class="flex items-center space-x-2">
                      <span class={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${
                        run.state === 'finished' ? 'bg-green-100 text-green-800' :
                        run.state === 'running' ? 'bg-blue-100 text-blue-800' :
                        run.state === 'crashed' ? 'bg-red-100 text-red-800' :
                        'bg-gray-100 text-gray-800'
                      }`}>
                        {run.state === 'finished' ? '完成' :
                         run.state === 'running' ? '运行中' :
                         run.state === 'crashed' ? '失败' : run.state}
                      </span>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}
        </div>

        {wandbProjects.length === 0 && recentRuns.length === 0 && (
          <div class="text-center py-8">
            <svg class="w-12 h-12 mx-auto mb-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2 2v-5m16 0h-2.586a1 1 0 00-.707.293l-1.414 1.414a1 1 0 01-.707.293h-2.172a1 1 0 01-.707-.293L13.586 13H11v4a1 1 0 01-1 1H6v-4h2.414a1 1 0 00.707-.293L10.586 13H16"></path>
            </svg>
            <p class="text-gray-600">暂无 WandB 数据</p>
          </div>
        )}
      </>
    )}
  </div>
</div>

<style>
  .wandb-stats {
    @apply w-full;
  }
  
  @media (max-width: 768px) {
    .wandb-stats .grid-cols-4 {
      @apply grid-cols-2;
    }
    
    .wandb-stats .md\:grid-cols-2 {
      @apply grid-cols-1;
    }
  }
</style>